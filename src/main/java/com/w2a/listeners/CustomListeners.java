package com.w2a.listeners;

import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;

import javax.mail.MessagingException;
import javax.mail.internet.AddressException;

import org.testng.ISuite;
import org.testng.ISuiteListener;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;
import org.testng.Reporter;
import org.testng.SkipException;

import com.relevantcodes.extentreports.LogStatus;
import com.w2a.base.Page;

import utilities.MonitoringMail;
import utilities.TestConfig;
import utilities.Utilities;

/*
 * ITestListerner is the iterface provided by the test-ng
 * default method will executed when something happens
 * 
 * 
 */

public class CustomListeners extends Page implements ITestListener, ISuiteListener {

	public static String messageBody;

	public void onFinish(ITestContext arg0) {
		// TODO Auto-generated method stub

	}

	public void onStart(ITestContext arg0) {
		// TODO Auto-generated method stub

	}

	public void onTestFailedButWithinSuccessPercentage(ITestResult arg0) {
		// TODO Auto-generated method stub

	}

	public void onTestFailure(ITestResult arg0) {
		// TODO Auto-generated method stub

		/*
		 * setting flag to take screenshot in report-ng
		 */
		System.setProperty("org.uncommons.reportng.escape-output", "false");

		/*
		 * to generate report-ng we use Reporter class to generate the
		 * screenshot in reports generated by report-ng we set flag
		 * 'escape-output to false
		 */
		try {
			Utilities.captureScreenShot();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		// ExtentReport
		test.log(LogStatus.FAIL, arg0.getName().toUpperCase() + " Failed with exception : " + arg0.getThrowable());
		test.log(LogStatus.FAIL, test.addScreenCapture(Utilities.screenshotName));

		// ReportNG
		Reporter.log("Click to see Screenshot");
		Reporter.log("<a target=\"_blank\" href=" + Utilities.screenshotName + ">Screenshot</a>");
		Reporter.log("<br>");
		Reporter.log("<br>");
		Reporter.log("<a target=\"_blank\" href=" + Utilities.screenshotName + "><img src=" + Utilities.screenshotName
				+ " height=100 width=200></img></a>");

		// we need to call endTest()
		rep.endTest(test);
		// call flush() to generate the reports
		rep.flush();

	}

	public void onTestSkipped(ITestResult arg0) {
		// TODO Auto-generated method stub

		test.log(LogStatus.SKIP, arg0.getName().toUpperCase() + " Skipped the test as the Run mode is NO");
		// we need to call endTest()
		rep.endTest(test);
		// call flush() to generate the reports
		rep.flush();

	}

	public void onTestStart(ITestResult arg0) {
		// TODO Auto-generated method stub

		test = rep.startTest(arg0.getName().toUpperCase());

	}

	public void onTestSuccess(ITestResult arg0) {
		// TODO Auto-generated method stub

		test.log(LogStatus.PASS, arg0.getName().toUpperCase() + " PASS");
		// we need to call endTest()
		rep.endTest(test);
		// call flush() to generate the reports
		rep.flush();

	}

	public void onFinish(ISuite suite) {
		// TODO Auto-generated method stub

		MonitoringMail mail = new MonitoringMail();

		try {
			messageBody = "Test Execution completed on Jenkins, Click below link to view the Reports." + "<br>"
					+ "http://" + InetAddress.getLocalHost().getHostAddress()
					+ ":8080/job/LiveProject%20-%20PageObjectModel/Extent_20Report/";
		} catch (UnknownHostException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		try {
			mail.sendMail(TestConfig.server, TestConfig.from, TestConfig.to, TestConfig.subject, messageBody);
		} catch (AddressException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (MessagingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public void onStart(ISuite suite) {
		// TODO Auto-generated method stub

		MonitoringMail mail = new MonitoringMail();

		try {
			messageBody = "Test Execution has started on Jenkins, Reports will be available after the Test Execution finished at below link."
					+ "<br>" + "http://" + InetAddress.getLocalHost().getHostAddress()
					+ ":8080/job/DataDrivenLiveProject/Extent_20Report/";
		} catch (UnknownHostException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		try {
			mail.sendMail(TestConfig.server, TestConfig.from, TestConfig.to, TestConfig.subject, messageBody);
		} catch (AddressException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (MessagingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
